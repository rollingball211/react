useState() 사용법

const [변수명, set함수명] = useState(초기값);

useEffect( EffectFunction , dependency array (의존성 배열))


Hook
→   Hook을 사용하면 Function component도 Class Component의 기능을 모두 동일하게 사용 가능함
→  원래 기능에 갈고리를 거는것 처럼 같이 수행되는 것을 의미함 ex) webhook

→ React의 state와 생명주기 기능의 갈고리를 걸어 원하는 시점에 정해진 함수를 실행시킴 (이때 실행되는 함수의 이름이 hook)

→ Hook의 이름은 모두 Use로 시작함

- Hook 종류
    
    → UseState()
    함수 컴포넌트에서 state를 사용하기 위해서 사용
    
    
    이 경우, 버튼을 눌러도 Count값이 증가하나, 페이지가 재랜더링 되지 않기 때문에 UseState()를 사용해 렌더링을 다시 해야함
    
    useState() 사용법
    
    const [변수명, set함수명] = useState(초기값);
    
    
    useState를 사용해 설정한 모습
    
    Class Component에서는 setState 함수 하나를 이용해 모든 state값을 업데이트할 수 있었지만, useState의 함수는 변수 각각에 대해 set함수가 따로 존재함
    
    UseEffect()
    
    → Side Effect를 수행하기 위한 Hook
    React의 sideEffect는 서버에서 데이터를 받아오거나 수동으로 DOM을 변경하는 등의 작업을 의미함
    
    → 다른 컴포넌트에 영향을 미칠 수 있으며, 렌더링 중에는 작업이 완료될 수 없기 때문임
    
    생명주기의 함수와 동일한 기능을 수행함! 
    
    useEffect( EffectFunction , dependency array (의존성 배열))
    
    1. 배열안에 있는 변수 중에 값이 하나라도 변하면 이펙트 함수가 실행됨. 
    2. 처음 컴포넌트가 렌더링 된 이후와 업데이트로 인한 재랜더링 이후에 실행됨.
    3. Mount & UnMount 시에 단 한번씩만 실행되게 하고 싶다면, 의존성 배열에 빈 배열을 넣으면 됨
    4. 의존성 배열을 생략할 경우, 컴포넌트가 업데이트 될 때마다 호출됨